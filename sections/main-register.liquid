{{ 'customer.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="customer register section-{{ section.id }}-padding">
  <div class="login-bg--image">
    {% if section.settings.bg_image_desktop != blank %}
      {% render 'responsive-picture' class = 'image' mobileImage: section.settings.bg_image_mobile, desktopImage: section.settings.bg_image_desktop %}
    {% endif %}
  </div>
  <div class="register-data--container">
    <h1>Register</h1>
    <div class="register-bucket">
      {%- form 'create_customer', novalidate: 'novalidate' -%}
        {%- if form.errors -%}
          <h2 class="form__message" tabindex="-1" autofocus>
            <span class="svg-wrapper">
              {{- 'icon-error.svg' | inline_asset_content -}}
            </span>
            {{ 'templates.contact.form.error_heading' | t }}
          </h2>
          <ul>
            {%- for field in form.errors -%}
              <li>
                {%- if field == 'form' -%}
                  {{ form.errors.messages[field] }}
                {%- else -%}
                  <a href="#RegisterForm-{{ field }}">
                    {{ form.errors.translated_fields[field] | capitalize }}
                    {{ form.errors.messages[field] }}
                  </a>
                {%- endif -%}
              </li>
            {%- endfor -%}
          </ul>
        {%- endif -%}
        <p class="input-captions">Full Name</p>
        <div class="field">
          <input
            type="text"
            name="customer[first_name]"
            id="RegisterForm-FirstName"
            {% if form.first_name %}
              value="{{ form.first_name }}"
            {% endif %}
            autocomplete="given-name"
            placeholder="{{ 'customer.register.first_name' | t }}"
          >
          <label for="RegisterForm-FirstName"> Enter your full name </label>
        </div>
        <div class="field" id="last_name">
          <input
            type="text"
            name="customer[last_name]"
            id="RegisterForm-LastName"
            {% if form.last_name %}
              value="{{ form.last_name }}"
            {% endif %}
            autocomplete="family-name"
            placeholder="{{ 'customer.register.last_name' | t }}"
          >
          <label for="RegisterForm-LastName">
            {{ 'customer.register.last_name' | t }}
          </label>
        </div>
        <p class="input-captions">Email</p>
        <div class="field">
          <input
            type="email"
            name="customer[email]"
            id="RegisterForm-email"
            {% if form.email %}
              value="{{ form.email }}"
            {% endif %}
            spellcheck="false"
            autocapitalize="off"
            autocomplete="email"
            aria-required="true"
            {% if form.errors contains 'email' %}
              aria-invalid="true"
              aria-describedby="RegisterForm-email-error"
            {% endif %}
            placeholder="{{ 'customer.register.email' | t }}"
          >
          <label for="RegisterForm-email"> Enter your email </label>
        </div>
        {%- if form.errors contains 'email' -%}
          <span id="RegisterForm-email-error" class="form__message">
            <span class="svg-wrapper">
              {{- 'icon-error.svg' | inline_asset_content -}}
            </span>
            {{ form.errors.translated_fields.email | capitalize }}
            {{ form.errors.messages.email }}.
          </span>
        {%- endif -%}
        <p class="input-captions">Password</p>
        <div class="field">
          <input
            type="password"
            name="customer[password]"
            id="RegisterForm-password"
            aria-required="true"
            {% if form.errors contains 'password' %}
              aria-invalid="true"
              aria-describedby="RegisterForm-password-error"
            {% endif %}
            placeholder="{{ 'customer.register.password' | t }}"
          >
          <label for="RegisterForm-password"> Enter your password </label>
            <span class="toggle-password" style="display: none; position: absolute; right: 12px; top: 50%; transform: translateY(-50%); cursor: pointer;">
              üëÅÔ∏è
            </span>
        </div>
        {%- if form.errors contains 'password' -%}
          <span id="RegisterForm-password-error" class="form__message">
            <span class="svg-wrapper">
              {{- 'icon-error.svg' | inline_asset_content -}}
            </span>
            {{ form.errors.translated_fields.password | capitalize }}
            {{ form.errors.messages.password }}.
          </span>
        {%- endif -%}

        <span class="checkbox-wrapper">
          <input type="checkbox" id="terms-checkbox">
          <p class="terms-checkbox create-instruction">
            I agree to BLOODY BLACK <a href="/policies/terms-of-service" target="_blank">Terms and Conditions</a> and <a href="/policies/privacy-policy" target="_blank">Privacy Policy</a>.
          </p>
        </span>

        <button id="create-account-btn" disabled>
          {{ 'customer.register.submit' | t }}
        </button>
      {%- endform -%}
    </div>
    <div class="login-redirect">
      <h3>Already have an account</h3>
      <a href="/account/login">Sign In</a>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const checkbox = document.getElementById('terms-checkbox');
    const button = document.getElementById('create-account-btn');
    const toggle = document.querySelector('.toggle-password');
    const passwordInput = document.getElementById('RegisterForm-password');

    // Enable/disable button based on checkbox
    if (checkbox && button) {
      button.disabled = !checkbox.checked;

      checkbox.addEventListener('change', () => {
        button.disabled = !checkbox.checked;
      });
    }

    // Show/hide password toggle icon
    function updateToggleVisibility() {
      if (toggle && passwordInput) {
        toggle.style.display = passwordInput.value ? 'block' : 'none';
      }
    }

    if (toggle && passwordInput) {
      updateToggleVisibility();

      passwordInput.addEventListener('input', updateToggleVisibility);

      toggle.addEventListener('click', () => {
        const isPassword = passwordInput.type === 'password';
        passwordInput.type = isPassword ? 'text' : 'password';
      });
    }
  });
</script>

{% schema %}
{
  "name": "t:sections.main-register.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
    "type": "image_picker",
    "id": "bg_image_mobile",
    "label": "Mobile background image"
    },
    {
      "type": "image_picker",
      "id": "bg_image_desktop",
      "label": "Desktop background image"
    }
  ]
}
{% endschema %}
